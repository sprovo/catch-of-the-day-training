{"version":3,"sources":["components/Header.js","helpers.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/StorePicker.js","components/NotFound.js","components/Router.js","index.js"],"names":["Header","tagline","className","formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","Order","renderOrder","key","fish","props","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","CSSTransition","TransitionGroup","component","name","price","onClick","removeFromOrder","this","orderIds","Object","keys","total","reduce","prevTotal","map","React","Component","AddFishForm","nameRef","createRef","priceRef","statusRef","descRef","imageRef","createFish","event","preventDefault","current","value","parseFloat","desc","image","addFish","currentTarget","reset","onSubmit","ref","type","placeholder","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","details","src","alt","disabled","App","Date","now","sampleFishes","params","match","localStoreRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","StorePicker","myInput","goToStore","storeName","history","push","required","defaultValue","NotFound","Router","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.38dff37e.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = ({ tagline }) => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <span className=\"ofThe\">\n        <span className=\"of\">of</span>\n        <span className=\"The\">The</span>\n      </span>\n      Day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n  renderOrder = (key) => {\n    const fish = this.props.fishes[key]; // fish details\n    const count = this.props.order[key]; // quantity to buy\n\n    // Accounts for the possibility that this fish could be made unavailable during checkout\n    const isAvailable = fish && fish.status === \"available\";\n    const transitionOptions = {\n      classNames: \"order\",\n      key,\n      timeout: { enter: 500, exit: 500 },\n    };\n\n    if (!fish) return null;\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry {fish ? fish.name : \"fish\"} is no longer available{\" \"}\n          </li>\n        </CSSTransition>\n      );\n    }\n\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n\n  render() {\n    const { fishes, order } = this.props;\n    const orderIds = Object.keys(order);\n    // Calc total order price\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = fishes[key]; // fish details\n      const count = order[key]; // quantity to buy\n      const isAvailable = fish && fish.status === \"available\";\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          <strong>Total: {formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React from \"react\";\n\nclass AddFishForm extends React.Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  createFish = (event) => {\n    event.preventDefault();\n    // Shaping the fish component\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value,\n    };\n    // Adding a fish to the inventory\n    this.props.addFish(fish);\n    // Refresh form\n    event.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n        <input\n          name=\"price\"\n          ref={this.priceRef}\n          type=\"text\"\n          placeholder=\"Price\"\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n        <input\n          name=\"image\"\n          ref={this.imageRef}\n          type=\"text\"\n          placeholder=\"Image\"\n        />\n        <button type=\"submit\">+ Add Fish</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;\n","import React from \"react\";\n\nclass EditFishForm extends React.Component {\n  handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    // Update fish\n    const updatedFish = {\n      ...this.props.fish,\n      [name]: value,\n    };\n    // Update State\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n\n  render() {\n    const {\n      fish: { name, status, price, desc, image },\n    } = this.props;\n\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          placeholder=\"name\"\n          value={name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          placeholder=\"price\"\n          value={price}\n        />\n        <select\n          name=\"status\"\n          onChange={this.handleChange}\n          placeholder=\"status\"\n          value={status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          placeholder=\"desc\"\n          value={desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          placeholder=\"image\"\n          value={image}\n        />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\n          Remove Fish\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditFishForm;\n","import React from \"react\";\nimport PropType from \"prop-types\";\n\nconst Login = (props) => {\n  return (\n    <nav className=\"login\">\n      <h2>Inventory Login</h2>\n      <p>Sign in to manage your store's inventory</p>\n      <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\n        Login With Github\n      </button>\n    </nav>\n  );\n};\n\nLogin.propTypes = {\n  authenticate: PropType.func.isRequired,\n};\n\nexport default Login;\n","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nexport const firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyAWEs61MG3F5HLzP7ijdWFpX9d9KJ9ZPJM\",\n  authDomain: \"catch-of-the-day-trainin-7589a.firebaseapp.com\",\n  databaseURL:\n    \"https://catch-of-the-day-trainin-7589a-default-rtdb.firebaseio.com\",\n});\n\n// rebase bindings\nconst base = Rebase.createClass(firebaseApp.database());\n\nexport default base;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    storeId: PropTypes.string,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func,\n  };\n\n  state = {\n    uid: null,\n    owner: null,\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async (authData) => {\n    // Look up current store in database\n    const store = await base.fetch(this.props.storeId, { context: this });\n    // Claim store if no owner\n    if (!store.owner) {\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid,\n      });\n    }\n    // Set inventory state to reflect current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid,\n    });\n  };\n\n  authenticate = (provider) => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\n  };\n\n  logout = async () => {\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  };\n\n  render() {\n    const logout = <button onClick={this.logout}>Log Out</button>;\n\n    // Check if logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n    // If not this store's owner\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry, you are now the owner!</p>\n          {logout}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory!</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map((key) => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\n\nclass Fish extends React.Component {\n  static propTypes = {\n    index: PropTypes.string,\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      price: PropTypes.number,\n      status: PropTypes.string,\n    }),\n    addToOrder: PropTypes.func,\n  };\n\n  handleClick = () => {\n    this.props.addToOrder(this.props.index);\n  };\n\n  render() {\n    const { image, name, desc, price, status } = this.props.details;\n    const isAvailable = status === \"available\";\n\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button disabled={!isAvailable} onClick={this.handleClick}>\n          {isAvailable ? \"Add To Cart\" : \"Sold Out!\"}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {},\n  };\n\n  componentDidMount() {\n    // Firebase reference\n    const { params } = this.props.match;\n    // Reload order data via local storage\n    const localStoreRef = localStorage.getItem(params.storeId);\n    if (localStoreRef) {\n      this.setState({ order: JSON.parse(localStoreRef) });\n    }\n    // Stores a reference to DB so the binding can be removed on unmount\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: \"fishes\",\n    });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    );\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addFish = (fish) => {\n    // Copy existing state\n    const fishes = { ...this.state.fishes };\n    // Add new fish\n    fishes[`fish${Date.now()}`] = fish;\n    // Update fishes state\n    this.setState({\n      fishes: fishes,\n    });\n  };\n\n  updateFish = (key, updatedFish) => {\n    // Creates updated fish state\n    const fishes = { ...this.state.fishes, [key]: updatedFish };\n    this.setState({ fishes });\n  };\n\n  deleteFish = (key) => {\n    // Remove an item from state\n    const fishes = { ...this.state.fishes, [key]: null };\n    this.setState({ fishes });\n  };\n\n  loadSampleFishes = () => {\n    this.setState({\n      fishes: sampleFishes,\n    });\n  };\n\n  addToOrder = (key) => {\n    // Copy State\n    const order = { ...this.state.order };\n    // Add to order or update number in order\n    order[key] = order[key] + 1 || 1;\n    // Set new state\n    this.setState({ order });\n  };\n\n  removeFromOrder = (key) => {\n    // Copy State\n    const order = { ...this.state.order };\n    // Remove item from order\n    delete order[key];\n    // Set new state\n    this.setState({ order });\n  };\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map((key) => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n  myInput = React.createRef();\n\n  goToStore = (event) => {\n    event.preventDefault();\n    // Get text input\n    const storeName = this.myInput.current.value;\n    // Change page to store/text-input\n    this.props.history.push(`/store/${storeName}`);\n  };\n\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter A Store</h2>\n        <input\n          ref={this.myInput}\n          type=\"text\"\n          required\n          placeholder=\"Store name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store {\"->\"}</button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h2>Not Found!!!</h2>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport App from \"./App\";\nimport StorePicker from \"./StorePicker\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route exact path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Router from \"./components/Router\";\nimport \"./css/style.css\";\n\nrender(<Router />, document.querySelector(\"#main\"));\n"],"sourceRoot":""}